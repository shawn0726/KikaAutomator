{"name": "test_InputMethod_SCB_Func_01_01_0002", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'qwertyuiopasdfghjklzxcvbnm 23456789 ' == 'qwertyuiopasdfghjklzxcvbnm 1234567890 '\n  - qwertyuiopasdfghjklzxcvbnm 1234567890 \n  ?                            -        ^^\n  + qwertyuiopasdfghjklzxcvbnm 23456789 \n  ?                                    ^", "trace": "set_device_id_list = ['6VPNU20C25220217'], set_driver_pool = [<appium.webdriver.webdriver.WebDriver (session=\"0c12da31-76de-47ee-8f8c-da81655eb493\")>], cmdopt = '0'\n\n    @allure.story('检查字符点击与上屏功能-中文26键')\n    # 通过 case_number 在 case_id 表中查询，对应的 case 使用哪个 driver\n    def test_InputMethod_SCB_Func_01_01_0002(set_device_id_list, set_driver_pool, cmdopt):\n        # pool 池中 driver 与 device_id 为一对一的关系\n        which_driver_pool = int(cmdopt)\n        driver = set_driver_pool[which_driver_pool]\n        input_page = InputPage(driver)\n        screen_size_list.clear()\n        get_vm_size(set_device_id_list[which_driver_pool], screen_size_list)\n        os.system(test_adb_data['adb_01_01_01_0003']['emptyinput'] % set_device_id_list[which_driver_pool])\n        time.sleep(3)\n        os.system(test_adb_data['adb_01_01_01_0004']['upkeyboard'] % set_device_id_list[which_driver_pool])\n        time.sleep(3)\n        # 检查键盘，非中文键盘，点击'切换'键，切换为英文键盘，检查完后点击enter清空文本框内容，再进行输入\n        if input_page.check_language(set_device_id_list[which_driver_pool], screen_size_list[0],\n                                     screen_size_list[1]) == 'english':\n            print('当前为英文键盘')\n            input_page.input_characters('enter', set_device_id_list[which_driver_pool], screen_size_list[0],\n                                        screen_size_list[1])\n        else:\n            input_page.input_characters('switch', set_device_id_list[which_driver_pool], screen_size_list[0],\n                                        screen_size_list[1])\n            input_page.input_characters('enter', set_device_id_list[which_driver_pool], screen_size_list[0],\n                                        screen_size_list[1])\n        input_page.tap_menu()\n        keyboard_setting_page = input_page.tap_setting()\n        page_setting_page = keyboard_setting_page.to_page_setting_page()\n        time.sleep(3)\n        page_setting_page.check_number_capitalization('select')\n        # from page.page_setting_page import PageSettingPage\n        page_setting_page.back_to_setting_page().back_to_input_page()\n        os.system(test_adb_data['adb_01_01_01_0004']['upkeyboard'] % set_device_id_list[which_driver_pool])\n        input_page.input_characters(test_case_data['func_01_01_01_0001']['word1'], set_device_id_list[which_driver_pool],\n                                    screen_size_list[0], screen_size_list[1])\n        input_page.input_characters('1234567890', set_device_id_list[which_driver_pool],\n                                    screen_size_list[0], screen_size_list[1])\n        text = input_page.find_element_by_class(\"android.widget.EditText\").text\n        print(text)\n>       assert text == 'qwertyuiopasdfghjklzxcvbnm 1234567890 '\nE       AssertionError: assert 'qwertyuiopasdfghjklzxcvbnm 23456789 ' == 'qwertyuiopasdfghjklzxcvbnm 1234567890 '\nE         - qwertyuiopasdfghjklzxcvbnm 1234567890 \nE         ?                            -        ^^\nE         + qwertyuiopasdfghjklzxcvbnm 23456789 \nE         ?                                    ^\n\ncase/TestCase.py:78: AssertionError"}, "start": 1640852403758, "stop": 1640852474683, "uuid": "ffce65e9-3122-411e-817b-cd49dedfa662", "historyId": "9e81fcd23720d7ca9ef3c3001f7da40f", "testCaseId": "97d10b4981010554042678ece0c8f287", "fullName": "case.TestCase#test_InputMethod_SCB_Func_01_01_0002", "labels": [{"name": "story", "value": "检查字符点击与上屏功能-中文26键"}, {"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "TestCase"}, {"name": "host", "value": "xm123deMacBook-Pro.local"}, {"name": "thread", "value": "23263-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.TestCase"}]}